SELECT 
Patient.Pat_ID1, 
Last_Name, 
First_Name, 
Ident.IDA, 
Ident.IDB, 
Ident.IDC, 
Clin_Status

INTO #testpt
FROM Patient
INNER JOIN Ident ON Patient.Pat_ID1 = Ident.Pat_ID1 AND Ident.Version = 0
Where 1=1 
AND Clin_Status <>10
AND 
(UPPER(Last_Name) LIKE 'TEST%'
OR  UPPER(Last_Name) LIKE 'ZZ%'
OR  UPPER(Last_Name) LIKE 'XX%'
--OR NOT(Ident.IDA LIKE '[0-9]%')
--OR len(Ident.IDA) <> 7
)




WITH CTE_cp AS --CTE_cp is the unique careplan/cycle list
(
SELECT  
pc2.PCP_Group_ID, 
pc2.Pat_ID1, 
c.CPlan_Name,
c.CPL_ID, c.CPL_Set_ID, c.Version,
c.Category, 
c.Regimen, 
pc2.MD_ID, 
pc2.PCP_ID,
Cycle_Number, 
pc2.MED_ID,
pc2.Tx_Intent,
ROW_Number() over (partition by pc2.PCP_Group_ID, pc2.Pat_ID1 order by min(pc2.PCP_ID)) as roww -- orders by the min(PCP_ID) for each Dr i.e. the First time the Dr was appended.
,min(pa.Adm_DtTm) as minAdmin
,  Admin.Pat_Postal as Postal
, Pat_Adr1 + ' ' +Pat_Adr2+ ' '+ Pat_City+ ' '+Pat_State+ ' ' + Pat_Postal as Address
, min(orders.Inst_ID) as Inst

/* EVIQ MAPPING REMOVED*/
,'' as ProtocolID



--Drug

, Orders.Start_DtTm 
, Drug.Generic_Name
, Orders.Cycle_Day
, ISNULL(dbo.fn_TSecStatus(Orders.ORC_ID,2),'') as Tx_Status 
, ISNULL(dbo.fn_GetObsDefDesc(Orders.Adj_Reason1), '') as Adj_Reason1
,Orders.ORC_Set_ID
,po.Calculated_Dose_Amount
 ,po.Ordering_Dose_Min
 ,CASE WHEN po.Calculated_Dose_Amount=0 THEN NULL
 ELSE Abs((po.Ordering_Dose_Min - po.Calculated_Dose_Amount)/po.Calculated_Dose_Amount)
 END as [DoseVar%]
, (Select CPLAN.CPlan_Name FROM CPlan INNER JOIN PatCPlan ON PatCPlan.CPL_ID = CPlan.CPL_ID  INNER JOIN PatCItem ON PatCItem.PCP_ID = PatCPlan.PCP_ID WHERE PatCItem.PCI_ID =  Orders.PCI_ID ) as CP_test


FROM Orders with (nolock)
INNER JOIN dbo.PatCItem as pc with (nolock) ON dbo.Orders.PCI_ID = pc.PCI_ID 
INNER jOIN PharmOrd as po with (nolock) ON dbo.Orders.ORC_Set_ID = po.ORC_Set_ID AND Orders.Version = PO.Version
INNER JOIN dbo.PatCPlan as pc2 with (nolock)  ON pc.PCP_ID = pc2.PCP_ID
INNER JOIN dbo.CPlan as c with (nolock) ON pc2.CPL_ID = c.CPL_ID 
INNER JOIN dbo.PharmAdm as pa with (nolock) ON po.ORC_Set_ID = pa.ORC_Set_ID 
LEFT OUTER JOIN CPItem with (nolock) ON pc.CPI_ID = CPItem.CPI_ID
INNER JOIN Admin (nolock) ON pc2.Pat_ID1 = Admin.Pat_ID1
LEFT OUTER JOIN dbo.Drug Drug ON po.Req_Give_Code = Drug.DRG_ID 

WHERE 1=1
AND Orders.Version = 0
AND po.Version = 0
--AND pa.Adm_DtTm BETWEEN '2022-1-1' AND '2022-3-31'
--AND (pa.Adm_DtTm + (c.Cycle_Length- isnull(CPItem.Day_Offset,0)) - 1) BETWEEN '2021-1-1' AND '2021-2-1'
AND po.Status_Enum IN (2,3,5,22)
AND dbo.Orders.Order_Type IN (4,5)
AND Orders.Status_Enum IN (2,3,5,22)
AND pa.Version = 0 
AND pa.Adm_DtTm IS NOT NULL
AND Cycle_Number IS NOT NULL
--AND Orders.Inst_ID <> 3 --careplan inst
AND NOT(Orders.Pat_ID1 IN (SELECT Pat_ID1 FROM #testpt ))

GROUP BY 
pc2.PCP_Group_ID, 
pc2.Pat_ID1, 
Admin.Pat_Postal, 
Pat_Adr1,Pat_Adr2,
Pat_City,Pat_State,
Pat_Postal,
c.CPlan_Name, c.CPL_Set_ID, c.Version,
c.CPL_ID,
c.Regimen, 
c.Category, 
pc2.MD_ID, 
MED_ID, 
Cycle_Number, 
pc2.PCP_ID, 
pc2.Tx_Intent
--drugs
,Orders.PCI_ID
, Orders.Start_DtTm 
, Drug.Generic_Name
, Orders.Cycle_Day
, ISNULL(dbo.fn_TSecStatus(Orders.ORC_ID,2),'') --as Tx_Status 
, ISNULL(dbo.fn_GetObsDefDesc(Orders.Adj_Reason1), '') --as Adj_Reason1
, Orders.ORC_Set_ID
,po.Calculated_Dose_Amount
,po.Ordering_Dose_Min
)

SELECT 

CTE_cp.PCP_Group_ID as CP_Group_ID, 
CTE_cp.Pat_ID1 as Pat_Pat_ID1,
CTE_cp.CPlan_Name as CP_Name, 
CTE_cp.Regimen as CP_Regimen,
CTE_cp.Category as CP_Category,
CTE_cp.ProtocolID,
CTE_cp.Postal,
CTE_cp.Address,
CTE_cp.MD_ID as Dr_ID, 
CTE_cp.Cycle_Number as CP_Cycle,
CTE_cp.PCP_ID as PCP_ID,
CTE_cp.MED_ID as CP_MED_ID,
CTE_cp.minAdmin as Tx_Date,
CTE_cp.Inst,
CTE_cp.Tx_Intent,
CTE_cp.CPL_ID,
s.Last_Name as Dr_LastName,
s.First_Name Dr_First_Name,
s.type Dr_Staff_Type,
ISNULL(ei.ID_Code, '*MISSING*') AS Dr_AHPRA, 
RTRIM(p.Last_Name) +', '+RTRIM(p.First_Name) as Pat_Name, 
i.IDA,
Convert(date, firstTx.FirstAdmin) as CP_FirstCareplanTx,
Dx.Diag_Code_Primary as Dx_Diag_Code,
Dx.Staff_Type_Primary as Dx_Staff_Type,
Case WHEN Dx.Category_Primary ='' THEN '*UNCATEGORISED' 
    WHEN  Dx.Category_Primary IS NULL THEN '*UNCATEGORISED'
    ELSE Dx.Category_Primary 
    END as Dx_Category,
 
 T_Stage1, 
N_Stage1, 
M_Stage1, 
combined_stage,

s.Staff_ID,
ISNULL(dbo.fn_GetPatientAgeDistribution(CTE_cp.Pat_ID1, firstTx.FirstAdmin),'') as Pt_AgeBand,
ISNULL(dbo.fn_GetPatientAgeYears(CTE_cp.Pat_ID1, firstTx.FirstAdmin),'') as Pt_Age,
Case initial_treatment.row when 1 then 'New' else 'ReTx' end AS NewFlag,
ISNULL(dbo.fn_GetPatientRaces(p.Pat_ID1,1,0),'*MISSING*') as 'Indigenous status'

,CTE_cp.Cycle_Day
, CTE_cp.Generic_Name, 
CTE_cp.Tx_Status, 
CTE_cp.ORC_Set_ID, 
CTE_cp.Adj_Reason1, 
CTE_cp.Calculated_Dose_Amount, 
CTE_cp.[DoseVar%], 
CTE_cp.Ordering_Dose_Min,
Config.Inst_Abrv,

CTE_cp.CPL_ID, CTE_cp.CPL_Set_ID, CTE_cp.Version

FROM 
CTE_cp 

LEFT OUTER JOIN dbo.Staff s  ON CTE_cp.MD_ID = s.Staff_ID
LEFT OUTER JOIN  (Select ei.ID_Code, Staff_id, row_number() over (partition by  Staff_id, ei.ID_Code ORDER by staff_id) as roww From dbo.Ext_ID ei WHere ei.Ext_Type LIKE 'AHPRA' AND ei.ID_Code LIKE 'MED%') as ei ON s.Staff_ID = ei.Staff_id and ei.roww = 1
INNER JOIN Patient p ON CTE_cp.Pat_ID1 = p.Pat_Id1
LEFT OUTER JOIN Ident i ON p.Pat_ID1 = i.Pat_ID1 AND i.Version = 0
LEFT OUTER JOIN 

	(Select --PatCPlan.PCP_Group_ID, PatCPlan.Pat_ID1, min(PharmAdm.Adm_DtTm) as FirstAdmin
	PatCPlan.PCP_Group_ID, PatCPlan.Pat_ID1, PharmAdm.Adm_DtTm as FirstAdmin, row_number() over (partition by  PatCPlan.PCP_Group_ID, PatCPlan.Pat_ID1 ORDER by PharmAdm.Adm_DtTm) as roww
     From PatCPlan with (nolock)
     INNER JOIN PatCItem with (nolock) ON PatCPlan.PCP_ID = PatCItem.PCP_ID
     INNER JOIN Orders with (nolock) ON PatCItem.PCI_ID = Orders.PCI_ID 
      AND Orders.Cycle_Day IS NOT NULL 
      AND Orders.PCI_ID IS NOT NULL  
      AND Orders.Version = 0 
      AND Orders.Status_Enum NOT IN (1)
     --INNER JOIN PharmOrd with (nolock) ON Orders.ORC_Set_ID = PharmOrd.ORC_Set_ID
     INNER JOIN PharmAdm with (nolock) ON PharmAdm.ORC_Set_ID = Orders.ORC_Set_ID
	    -- Group By PatCPlan.PCP_Group_ID, PatCPlan.Pat_ID1 
     ) as firstTx  ON firstTx.Pat_ID1 = CTE_cp.Pat_ID1 AND firstTx.roww =1 AND CTE_cp.PCP_Group_ID = firstTx.PCP_Group_ID --fistTx for each cycle.

LEFT OUTER JOIN (SELECT Medical.MED_ID, 
     Medical.Pat_ID1, 
     --TopogP.Diag_Code,
     --TopogP.User_Code, 
     CASE WHEN Medical.Diagnosis_Class in (5,2) THEN TopogP.Diag_Code    ELSE Topog.Diag_Code  END AS Diag_Code_Primary,
     CASE WHEN Medical.Diagnosis_Class in (5,2) THEN sp.type       ELSE sm.type END AS Staff_Type_Primary,
     CASE WHEN Medical.Diagnosis_Class in (5,2) THEN Isnull(MedicalPrimary.Category, 'No Category')   ELSE  isnull(Medical.Category, 'No Category') END AS Category_Primary,
					TNMStage.StageType AS StageType1, 
                     TNMStage.T_Stage AS T_Stage1, 
                     TNMStage.N_Stage AS N_Stage1, 
                     TNMStage.M_Stage AS M_Stage1, 
                     TNMStage.Stage AS combined_stage
     FROM Medical  with (nolock)
     left join Medical AS MedicalPrimary with (nolock) ON MedicalPrimary.MED_ID = Medical.Related_MED_ID and MedicalPrimary.Related_MED_ID  is null and MedicalPrimary.Diagnosis_Class in (1,7)  --- = MedicalPrimary.MED_ID and MedicalPrimary.Related_MED_ID IS NOT NULL
     left join Topog with (nolock) on Medical.TPG_ID = Topog.TPG_ID  
     left join Topog as TopogP with (nolock) on MedicalPrimary.TPG_ID = TopogP.TPG_ID  
     left join Staff sm on sm.Staff_ID = medical.Recorded_By_ID
     left join Staff sp on sp.Staff_ID = MedicalPrimary.Recorded_By_ID
	 left outer join TNMStage ON Medical.MED_ID = TNMStage.MED_ID AND TNMStage.StageType in (0,1)
     ) as Dx ON Dx.PAT_ID1 = p.Pat_ID1 AND CTE_cp.MED_ID = Dx.MED_ID

LEFT OUTER JOIN -- returns a PCP_Group_ID with 1 if its the Careplan is the min EffDtTm for the Dx.
        (select  PCP_Group_ID,  1 AS row  --p.Pat_ID1, p.MED_ID,
        from PatCPlan p  with (nolock)

        --min Eff Date for each Diagnosis.
        join (select p.Pat_ID1, p.MED_ID, min(p.Eff_DtTm) as Eff_DtTm
            from Medical m with (nolock)
            join PatCPlan p with (nolock) on m.MED_ID = p.MED_ID
            join CPlan c with (nolock) on p.CPL_ID = c.CPL_ID
            where m.Related_MED_ID is null
            and m.Diagnosis_Class = 1 
            and c.Intervention = 1
            and p.Status_Enum in (2,3,5,23)
            group by p.Pat_ID1, p.MED_ID
            ) a on p.Pat_ID1 = a.Pat_ID1 and p.MED_ID = a.MED_ID and p.Eff_DtTm = a.Eff_DtTm 
            and p.Status_Enum in (2,3,5,23)

    ) as initial_treatment ON initial_treatment.PCP_Group_ID = CTE_cp.PCP_Group_ID

    LEFT OUTER JOIN Config ON CTE_cp.Inst = Config.Inst_Id


WHERE 1=1
AND NOT(p.Pat_ID1 IN (SELECT Pat_ID1 FROM #testpt ))
AND (CTE_cp.minAdmin>= CAST('&[ReportingStartDate]&' AS DATETIME) 
AND CTE_cp.minAdmin<CAST('&[ReportingEndDate]&' AS DATETIME)) 

--AND Cycle_Number = 1
--AND (CTE_cp.Start_DtTm>=@startdate 
--AND CTE_cp.Start_DtTm< DateAdd(day,1, @enddate)) 

--order by CTE_cp.ORC_Set_ID
    

    